{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/config.ts","webpack:///external \"preact\"","webpack:///../src/index.js","webpack:///../index.js","webpack:///../src/parse-markup.js","webpack:///../src/to-vdom.js","webpack:///../src/markup-to-vdom.js","webpack:///../src/contexts/intl-context.js","webpack:///../src/lib/util.js","webpack:///../src/components/intl-provider.js","webpack:///../src/intl.js","webpack:///../src/lib/template.js","webpack:///../src/lib/translate.js","webpack:///../src/components/highlight-i18n.js","webpack:///../src/components/text.js","webpack:///../src/lib/translate-mapping.js","webpack:///../src/components/localizer.js","webpack:///../src/components/markup-text.js","webpack:///../src/components/with-text.js","webpack:///../src/hooks/use-text.js","webpack:///./i18n lazy ^\\.\\/.*\\.json$ namespace object","webpack:///./components/app.tsx","webpack:///./components/types.ts","webpack:///./index.ts"],"names":["installedModules","installedChunks","0","__webpack_require__","moduleId","exports","module","i","l","modules","call","e","chunkId","chunk","require","moreModules","chunkIds","ids","length","Promise","all","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","oe","err","process","nextTick","s","config","clientId","appId","developerKey","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeDiff","options","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","getHookState","index","type","hooks","__","__h","push","useContext","context","provider","state","sub","props","flushAfterPaintEffects","component","shift","forEach","invokeCleanup","invokeEffect","vnode","requestAnimationFrame","callback","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","some","filter","cb","hasErrored","hook","comp","cleanup","obj","def","undef","split","let","parserDoc","EMPTY_OBJ","walk","arr","nodeType","text","textContent","nodeValue","trim","isFirstOrLast","match","replace","nodeName","String","toLowerCase","allowScripts","children","out","h","attrs","len","substring","allowEvents","Function","attributes","childNodes","Array","map","exists","visitor","customReviver","x","node","keys","reduce","attrName","letter","toUpperCase","setReviver","shouldComponentUpdate","ref","this","wrap","markup","setComponents","components","render","vdom","reviver","constructor","defaultReviver","dom","doc","parserError","wrappedMarkup","tag","mime","DOMParser","parseFromString","document","implementation","createHTMLDocument","frame","createElement","style","cssText","setAttribute","body","appendChild","contentWindow","open","write","close","getElementsByTagName","fc","firstChild","error","removeChild","lastChild","Error","onError","console","cl","splice","Component","IntlContext","createContext","intl","defined","assign","const","URL_FLAG","IntlProvider","scope","definition","dictionary","deepAssign","target","source","mark","location","Provider","Child","arguments","IntlProviderWrapper","getWrappedComponent","EMPTY","template","fields","replacer","currentFields","field","parts","v","Text","translate","id","plural","fallback","delve","none","zero","one","singular","many","other","HighlightI18N","dictionaryKey","background","title","translateMapping","onlyTextNodes","properties","selected","val","pop","select","Localizer","child","cloneElement","Html","html","Markup","MarkupText","withText","mapping","WithTextWrapper","translations","useText","webpackAsyncContext","req","resolve","then","code","App","isGapiLoaded","tokenClient","accessToken","users","sendNotificationEmail","role","Role","reader","selectedDocument","selectedDocumentPermissions","result","batchLoading","language","i18n","navigator","languages","isLanguage","switchLanguage","loadExternalScript","gapi","load","client","init","setState","google","accounts","oauth2","initTokenClient","client_id","prompt","tokenResponse","access_token","choose","src","onload","script","requestAccessToken","picker","PickerBuilder","enableFeature","Feature","SUPPORT_DRIVES","setAppId","setOAuthToken","addView","DocsView","setEnableDrives","setDeveloperKey","setCallback","data","action","Action","PICKED","docs","list","drive","permissions","fileId","supportsAllDrives","build","setVisible","validatedUsers","isValid","message","count","undefined","confirm","batch","newBatch","emailAddress","add","resource","user","reason","invalidUser","find","includes","onClick","authorizeAndChoose","renderChoose","class","iconUrl","href","url","Date","lastEditedUtc","toLocaleString","dateStyle","timeStyle","permission","deleted","photoLink","displayName","onInput","event","placeholder","values","checked","batchInvite","disabled","notReflected","flatMap","entries","status","statusText","JSON","stringify","onChange","Languages","renderResult","renderBatchInvite","renderAuthorize","renderLoading"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// require() chunk loading for javascript\n\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] !== 0) {\n \t\t\tvar chunk = require(\"./\" + ({}[chunkId]||chunkId) + \".chunk.\" + {\"1\":\"5f11a\"}[chunkId] + \".js\");\n \t\t\tvar moreModules = chunk.modules, chunkIds = chunk.ids;\n \t\t\tfor(var moduleId in moreModules) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t\tfor(var i = 0; i < chunkIds.length; i++)\n \t\t\t\tinstalledChunks[chunkIds[i]] = 0;\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/google-docs-batch-invite/\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"qVkA\");\n","export const config = {\n  clientId: process.env.CLIENT_ID!,\n  appId: process.env.APP_ID!,\n  developerKey: process.env.DEVELOPER_KEY!,\n};\n","module.exports = require(\"preact\");","import { intl } from './intl';\nimport { IntlContext } from './contexts/intl-context';\nimport { IntlProvider } from './components/intl-provider';\nimport { Text } from './components/text';\nimport { MarkupText } from './components/markup-text';\nimport { Localizer } from './components/localizer';\nimport { withText } from './components/with-text';\nimport { useText } from './hooks/use-text';\nimport translate from './lib/translate';\n\nexport { intl, IntlContext, IntlProvider, Text, MarkupText, Localizer, withText, useText, translate };\n\nintl.intl = intl;\nintl.IntlContext = IntlContext;\nintl.IntlProvider = IntlProvider;\nintl.Text = Text;\nintl.MarkupText = MarkupText;\nintl.Localizer = Localizer;\nintl.withText = withText;\nintl.useText = useText;\nintl.translate = translate;\n\nexport default intl;\n","export default function dlv(obj, key, def, p, undef) {\n\tkey = key.split ? key.split('.') : key;\n\tfor (p = 0; p < key.length; p++) {\n\t\tobj = obj ? obj[key[p]] : undef;\n\t}\n\treturn obj === undef ? def : obj;\n}\n","let parserDoc;\n\n/** Parse markup into a DOM using the given mimetype.\n *\t@param {String} markup\n */\nexport default function parseMarkup(markup, type) {\n\tlet doc,\n\t\tmime = type==='html' ? 'text/html' : 'application/xml',\n\t\tparserError, wrappedMarkup, tag;\n\n\t// wrap with an element so we can find it after parsing, and to support multiple root nodes\n\tif (type==='html') {\n\t\ttag = 'body';\n\t\twrappedMarkup = '<!DOCTYPE html>\\n<html><body>'+markup+'</body></html>';\n\t}\n\telse {\n\t\ttag = 'xml';\n\t\twrappedMarkup = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>'+markup+'</xml>';\n\t}\n\n\t// if available (browser support varies), using DOMPaser in HTML mode is much faster, safer and cleaner than injecting HTML into an iframe.\n\ttry {\n\t\tdoc = new DOMParser().parseFromString(wrappedMarkup, mime);\n\t} catch (err) {\n\t\tparserError = err;\n\t}\n\n\t// fall back to using an iframe to parse HTML (not applicable for XML, since DOMParser() for XML works in IE9+):\n\tif (!doc && type==='html') {\n\t\tdoc = parserDoc || (parserDoc = buildParserFrame());\n\t\tdoc.open();\n\t\tdoc.write(wrappedMarkup);\n\t\tdoc.close();\n\t}\n\n\tif (!doc) return;\n\n\t// retrieve our wrapper node\n\tlet out = doc.getElementsByTagName(tag)[0],\n\t\tfc = out.firstChild;\n\n\tif (markup && !fc) {\n\t\tout.error = 'Document parse failed.';\n\t}\n\n\t// pluck out parser errors\n\tif (fc && String(fc.nodeName).toLowerCase()==='parsererror') {\n\t\t// remove post/preamble to get just the error message as text\n\t\tfc.removeChild(fc.firstChild);\n\t\tfc.removeChild(fc.lastChild);\n\t\tout.error = (fc.textContent || fc.nodeValue || parserError || 'Unknown error');\n\t\t// remove the error from the DOM leaving things nice and tidy\n\t\tout.removeChild(fc);\n\t}\n\n\treturn out;\n}\n\n/** A shared frame is used for the fallback HTML parser, built on-demand. */\nfunction buildParserFrame() {\n\tif (document.implementation && document.implementation.createHTMLDocument) {\n\t\treturn document.implementation.createHTMLDocument('');\n\t}\n\tlet frame = document.createElement('iframe');\n\tframe.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';\n\tframe.setAttribute('sandbox', 'allow-forms');\n\tdocument.body.appendChild(frame);\n\treturn frame.contentWindow.document;\n}\n","\nconst EMPTY_OBJ = {};\n\n// deeply convert an XML DOM to VDOM\nexport default function toVdom(node, visitor, h, options) {\n\twalk.visitor = visitor;\n\twalk.h = h;\n\twalk.options = options || EMPTY_OBJ;\n\treturn walk(node);\n}\n\nfunction walk(n, index, arr) {\n\tif (n.nodeType===3) {\n\t\tlet text = 'textContent' in n ? n.textContent : n.nodeValue || '';\n\n\t\tif (walk.options.trim!==false) {\n\t\t\tlet isFirstOrLast = index===0 || index===arr.length-1;\n\n\t\t\t// trim strings but don't entirely collapse whitespace\n\t\t\tif (text.match(/^[\\s\\n]+$/g) && walk.options.trim!=='all') {\n\t\t\t\ttext = ' ';\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext = text.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, walk.options.trim==='all' || isFirstOrLast ? '' : ' ');\n\t\t\t}\n\t\t\t// skip leading/trailing whitespace\n\t\t\t// if (!text || text===' ' && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\tif ((!text || text===' ') && arr.length>1 && isFirstOrLast) return null;\n\t\t\t// if (!text && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\t// if (!text || text===' ') return null;\n\t\t}\n\t\treturn text;\n\t}\n\tif (n.nodeType!==1) return null;\n\tlet nodeName = String(n.nodeName).toLowerCase();\n\n\t// Do not allow script tags unless explicitly specified\n\tif (nodeName==='script' && !walk.options.allowScripts) return null;\n\n\tlet out = walk.h(\n\t\tnodeName,\n\t\tgetProps(n.attributes),\n\t\twalkChildren(n.childNodes)\n\t);\n\tif (walk.visitor) walk.visitor(out);\n\treturn out;\n}\n\nfunction getProps(attrs) {\n\tlet len = attrs && attrs.length;\n\tif (!len) return null;\n\tlet props = {};\n\tfor (let i=0; i<len; i++) {\n\t\tlet { name, value } = attrs[i];\n\t\tif (name.substring(0,2)==='on' && walk.options.allowEvents){\n\t\t\tvalue  = new Function(value); // eslint-disable-line no-new-func\n\t\t}\n\t\tprops[name] = value;\n\t}\n\treturn props;\n}\n\nfunction walkChildren(children) {\n\tlet c = children && Array.prototype.map.call(children, walk).filter(exists);\n\treturn c && c.length ? c : null;\n}\n\nlet exists = x => x;\n","import parseMarkup from './parse-markup';\nimport toVdom from './to-vdom';\n\nconst EMPTY_OBJ = {};\n\n/** Convert markup into a virtual DOM.\n*\t@param {String} markup\t\tHTML or XML markup (indicate via `type`)\n*\t@param {String} [type=xml]\tA type to use when parsing `markup`. Either `xml` or `html`.\n*\t@param {Function} reviver\tThe JSX/hyperscript reviver (`h` function) to use. For example, Preact's `h` or `ReactDOM.createElement`.\n*\t@param {Object} [map]\t\tOptional map of custom element names to Components or variant element names.\n */\nexport default function markupToVdom(markup, type, reviver, map, options) {\n\tlet dom = parseMarkup(markup, type);\n\n\tif (dom && dom.error) {\n\t\tthrow new Error(dom.error);\n\t}\n\n\tlet body = dom && dom.body || dom;\n\tvisitor.map = map || EMPTY_OBJ;\n\tlet vdom = body && toVdom(body, visitor, reviver, options);\n\tvisitor.map = null;\n\n\n\treturn vdom && vdom.props && vdom.props.children || null;\n}\n\nfunction toCamelCase(name) {\n\treturn name.replace(/-(.)/g, (match, letter) =>letter.toUpperCase());\n}\n\nfunction visitor(node) {\n\tlet name = (node.type || '').toLowerCase(),\n\t\tmap = visitor.map;\n\n\t// eslint-disable-next-line no-prototype-builtins\n\tif (map && map.hasOwnProperty(name)){\n\t\tnode.type = map[name];\n\t\tnode.props = Object.keys(node.props || {}).reduce((attrs,attrName)=>{\n\t\t\tattrs[toCamelCase(attrName)] = node.props[attrName];\n\t\t\treturn attrs;\n\t\t},{});\n\t} else {\n\t\tnode.type =  name.replace(/[^a-z0-9-]/i,'');\n\t}\n\n}\n","import { createContext } from 'preact';\n\nexport const IntlContext = createContext({ intl: {} });\n","/** Check if an object is not null or undefined\n *\t@private\n */\nexport function defined(obj) {\n\treturn obj!==null && obj!==undefined;\n}\n\n\n/** A simpler Object.assign\n *  @private\n */\nexport function assign(obj, props) {\n\tfor (let i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\n\n/** Recursively copy keys from `source` to `target`, skipping truthy values already in `target`.\n *\t@private\n */\nexport function deepAssign(target, source) {\n\tlet out = assign({}, target);\n\tfor (let i in source) {\n\t\tif (source.hasOwnProperty(i)) {\n\t\t\tif (target[i] && source[i] && typeof target[i]==='object' && typeof source[i]==='object') {\n\t\t\t\tout[i] = deepAssign(target[i], source[i]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[i] = target[i] || source[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n/** select('foo,bar') creates a mapping: `{ foo, bar }`\n *\t@private\n */\nexport function select(properties) {\n\tproperties = properties || {};\n\tif (typeof properties==='string') {\n\t\tproperties = properties.split(',');\n\t}\n\tif ('join' in properties) {\n\t\tlet selected = {};\n\t\tfor (let i=0; i<properties.length; i++) {\n\t\t\tlet val = properties[i].trim();\n\t\t\tif (val) selected[val.split('.').pop()] = val;\n\t\t}\n\t\treturn selected;\n\t}\n\treturn properties;\n}\n","import { h } from 'preact';\nimport { useContext } from 'preact/hooks';\nimport { IntlContext } from '../contexts/intl-context';\nimport { assign, deepAssign } from '../lib/util';\n\n\nconst URL_FLAG = /[?&#]intl=show/;\n\n\n/** `<IntlProvider>` is a nestable internationalization definition provider.\n *\tIt exposes an Intl scope & definition into the tree,\n *\tmaking them available to descendant components.\n *\n *\t> **Note:** When nested, gives precedence to keys higher up the tree!\n *\t> This means lower-level components can set their defaults by wrapping themselves\n *\t> in an `<IntlProvider>`, but still remain localizable by their parent components.\n *\n *\t@name IntlProvider\n *\t@param props\n *\t@param {String} [props.scope]\t\t\tNest `definition` under a root key, and set the active scope for the tree (essentially prefixing all `<Text />` keys).\n *\t@param {Boolean} [props.mark=false]\t\tIf `true`, all `<Text>` elements will be shown with a red/green background indicating whether they have valid Intl keys.\n *\t@param {Object} [props.definition={}]\tMerge the given definition into the current intl definition, giving the *current* definition precedence (i.e., only adding keys, acting as defaults)\n *\n *\t@example\n *\t// generally imported from a JSON file:\n *\tlet definition = {\n *\t\tfoo: 'Le Feux'\n *\t};\n *\n *\t<IntlProvider scope=\"weather\" definition={definition}>\n *\t\t<Text key=\"foo\">The Foo</Text>\n *\t</IntlProvider>\n *\n *\t// This will render the text:\n *\t\"Le Feux\"\n */\n\nexport function IntlProvider({ scope, mark, definition, ...props }) {\n\tconst { intl: parentIntl } = useContext(IntlContext);\n\tlet intl = assign({}, parentIntl || {});\n\n\t// set active scope for the tree if given\n\tif (scope) intl.scope = scope;\n\n\t// merge definition into current with lower precedence\n\tif (definition) {\n\t\tintl.dictionary = deepAssign(intl.dictionary || {}, definition);\n\t}\n\n\tif (mark || (typeof location!=='undefined' && String(location).match(URL_FLAG))) {\n\t\tintl.mark = true;\n\t}\n\n\treturn (\n\t\t<IntlContext.Provider value={{ intl }}>\n\t\t\t{props.children}\n\t\t</IntlContext.Provider>\n\t);\n}\n","import { h } from 'preact';\nimport { IntlProvider } from './components/intl-provider';\n\n\n/**\n * Higher-order function that creates an `<IntlProvider />` wrapper component for the given component.  It\n * takes two forms depending on how many arguments it's given:\n * It can take a functional form like:\n * intl(ComponentToWrap, options)\n *\n * or it can take an annotation form like:\n * @intl(options)\n * class ComponentToWrap extends Component {}\n *\n *\t@param {Component or Object} args[0] If there are two arguments, the first argument is the Component to wrap in `<IntlProvider/>`. If there is just one argument, this is the options object to pass as `props` to `<IntlProvider/>`. See the definition of the options param below for details.\n *\t@param {Object} options If there are two arguments, the second argument is Passed as `props` to `<IntlProvider />`\n *\t@param [options.scope]\t\t\tNest `definition` under a root key, and set the active scope for the tree (essentially prefixing all `<Text />` keys).\n *\t@param [options.definition={}]\tMerge the given definition into the current intl definition, giving the *current* definition precedence (i.e., only adding keys, acting as defaults)\n */\nexport function intl(Child, options) {\n\tif (arguments.length<2) {\n\t\toptions = Child;\n\t\treturn Child => intl(Child, options);\n\t}\n\tfunction IntlProviderWrapper(props) {\n\t\treturn h(\n\t\t\tIntlProvider,\n\t\t\toptions || {},\n\t\t\th(Child, props)\n\t\t);\n\t}\n\n\tIntlProviderWrapper.getWrappedComponent = Child && Child.getWrappedComponent || (() => Child);\n\treturn IntlProviderWrapper;\n}\n","import { Text } from '../components/text';\nimport translate from './translate';\n\nconst EMPTY = {};\n\n/** Populate {{template.fields}} within a given string.\n *\n *\t@private\n *\t@param {String} template\tThe string containing fields to be resolved\n *\t@param {Object} [fields={}]\tOptionally nested object of fields, referencable from `template`.\n *\t@example\n *\t\ttemplate('foo{{bar}}', { bar:'baz' }) === 'foobaz'\n */\nexport default function template(template, fields, scope, dictionary) {\n\treturn template && template.replace(/\\{\\{([\\w.-]+)\\}\\}/g, replacer.bind(null, fields || EMPTY, scope, dictionary));\n}\n\n/** Replacement callback for injecting fields into a String\n *\t@private\n */\nfunction replacer(currentFields, scope, dictionary, s, field) {\n\tlet parts = field.split('.'),\n\t\tv = currentFields;\n\tfor (let i=0; i<parts.length; i++) {\n\t\tv = v[parts[i]];\n\t\tif (v == null) return ''; // eslint-disable-line eqeqeq\n\n\t\t//allow field values to be <Text /> nodes\n\t\tif (v && v.type === Text) {\n\t\t\treturn translate(v.props.id, scope, dictionary, v.props.fields, v.props.plural, v.props.fallback);\n\t\t}\n\t}\n\t// allow for recursive {{config.xx}} references:\n\tif (typeof v==='string' && v.match(/\\{\\{/)) {\n\t\tv = template(v, currentFields);\n\t}\n\treturn v;\n}\n","import delve from 'dlv';\nimport { defined } from './util';\nimport template from './template';\n\n/** Attempts to look up a translated value from a given dictionary.\n *  Also supports json templating using the format: {{variable}}\n *  Falls back to default text.\n *\n *  @param {String} id  \t\t\tIntl field name/id (subject to scope)\n *  @param {String} [scope='']\t\tScope, which prefixes `id` with `${scope}.`\n *  @param {Object} dictionary\t\tA nested object containing translations\n *  @param {Object} [fields={}]\t\tTemplate fields for use by translated strings\n *  @param {Number} [plural]\t\tIndicates a quantity, used to trigger pluralization\n *  @param {String|Array} [fallback]\tText to return if no translation is found\n *  @returns {String} translated\n */\nexport default function translate(id, scope, dictionary, fields, plural, fallback) {\n\tif (scope) id = scope + '.' + id;\n\n\tlet value = dictionary && delve(dictionary, id);\n\n\t// plural forms:\n\t// key: ['plural', 'singular']\n\t// key: { none, one, many }\n\t// key: { zero, one, other }\n\t// key: { singular, plural }\n\tif ((plural || plural===0) && value && typeof value==='object') {\n\t\tif (value.splice) {\n\t\t\tvalue = value[plural] || value[0];\n\t\t}\n\t\telse if (plural===0 && defined(value.none || value.zero)) {\n\t\t\tvalue = value.none || value.zero;\n\t\t}\n\t\telse if (plural===1 && defined(value.one || value.singular)) {\n\t\t\tvalue = value.one || value.singular;\n\t\t}\n\t\telse {\n\t\t\tvalue = value.some || value.many || value.plural || value.other || value;\n\t\t}\n\t}\n\n\treturn value && template(value, fields, scope, dictionary) || fallback || null;\n}\n","import { h } from 'preact';\nimport { useContext } from 'preact/hooks';\nimport { IntlContext } from '../contexts/intl-context';\nimport delve from 'dlv';\n\n\n/** Highlight/colorize the i18n'd node if `mark` is set on `intl` in context.  If not, just returns `value`\n *\n *\t@private\n *\t@param {String|VNode} value\tThe l10n'd text/vnode to highlight or pass through\n *\t@param {string} id\tThe key used to lookup the value in the intl dictionary\n */\nexport function HighlightI18N({ value, id }) {\n\tconst { intl } = useContext(IntlContext);\n\n\tif (intl && intl.mark) {\n\t\tconst dictionaryKey = `dictionary${intl && intl.scope ? `.${intl.scope}` : ''}.${id}`;\n\t\treturn (\n\t\t\t<mark\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: value\n\t\t\t\t\t\t? delve(intl, dictionaryKey)\n\t\t\t\t\t\t\t? 'rgba(119,231,117,.5)'\n\t\t\t\t\t\t\t: 'rgba(229,226,41,.5)'\n\t\t\t\t\t\t: 'rgba(228,147,51,.5)'\n\t\t\t\t}}\n\t\t\t\ttitle={id}\n\t\t\t>\n\t\t\t\t{value}\n\t\t\t</mark>\n\t\t);\n\t}\n\n\treturn value;\n}\n","import { h } from 'preact';\nimport { useContext } from 'preact/hooks';\nimport { IntlContext } from '../contexts/intl-context';\nimport translate from '../lib/translate';\nimport { HighlightI18N } from './highlight-i18n';\n\n/** `<Text>` renders internationalized text.\n *\tIt attempts to look up translated values from a dictionary in context.\n *\n *\tTemplate strings can contain `{{field}}` placeholders,\n *\twhich injects values from the `fields` prop.\n *\n *\tWhen string lookup fails, renders its children as fallback text.\n *\n *\t@param {Object}       props               props\n *\t@param {String}       props.id            Key to look up in intl dictionary, within any parent scopes (`$scope1.$scope2.$id`)\n *\t@param {ReactElement} [props.children]    Fallback text if no definition is found\n *\t@param {Object}       [props.fields={}]   Values to inject into template `{{fields}}`. Values in the `fields` object will be coerced to strings, with the exception of `<Text/>` nodes which will be resolved to their translated value\n *\t@param {Number}       [props.plural]      Integer \"count\", used to select plural forms\n *\n *\t@example\n *\t// If there is no dictionary in context..\n *\t<Text id=\"foo\">The Foo</Text>\n *\t// ..produces the text:\n *\t\"The Foo\"\n *\n *\t@example\n *\t// Given a dictionary and some fields..\n *\t<IntlProvider definition={{ foo:'Le Feux {{bar}}' }}>\n *\t\t<Text id=\"foo\" fields={{ bar: 'BEAR' }}>The Foo</Text>\n *\t</IntlProvider>\n *\t// ..produces the text:\n *\t\"Le Feux BEAR\"\n *\n *\t@example\n *\t// Within a scope, both `id` and the definition are namespaced..\n *\t<IntlProvider scope=\"weather\" definition={{ foo:'Le Feux' }}>\n *\t\t<Text id=\"foo\">The Foo</Text>\n *\t</IntlProvider>\n *\t// ..produces the text:\n *\t\"Le Feux\"\n */\nexport function Text({ id, children: fallback, plural, fields }) {\n\tconst { intl } = useContext(IntlContext);\n\n\tlet value = translate(\n\t\tid,\n\t\tintl && intl.scope,\n\t\tintl && intl.dictionary,\n\t\tfields,\n\t\tplural,\n\t\tfallback\n\t);\n\n\treturn <HighlightI18N id={id} value={value} />;\n}\n","import { assign, select } from './util';\nimport translate from './translate';\nimport { Text } from '../components/text';\n\n/** Translates the property values in an Object, returning a copy.\n *\t**Note:** By default, `String` keys will be treated as Intl ID's.\n *\tPass `true` to return an Object containing *only* translated\n *\tvalues where the prop is a <Text /> node.\n *\n *\t@private\n *\t@param {Object} props\tAn object with values to translate\n *\t@param {Object} intl\tAn intl context object (eg: `context.intl`)\n *\t@param {Boolean} [onlyTextNodes=false]\tOnly process `<Text />` values\n *\t@returns {Object} translatedProps\n */\nexport default function translateMapping(props, intl, onlyTextNodes) {\n\tlet out = {};\n\tintl = intl || {};\n\tprops = select(props);\n\tfor (let name in props) {\n\t\tif (props.hasOwnProperty(name) && props[name]) {\n\t\t\tlet def = props[name];\n\n\t\t\t// if onlyTextNodes=true, skip any props that aren't <Text /> vnodes\n\t\t\tif (!onlyTextNodes && typeof def==='string') {\n\t\t\t\tout[name] = translate(def, intl.scope, intl.dictionary);\n\t\t\t}\n\t\t\telse if (def.type===Text) {\n\t\t\t\t// it's a <Text />, just grab its props:\n\t\t\t\tdef = assign({\n\t\t\t\t\t// use children as fallback content\n\t\t\t\t\tfallback: def.props.children\n\t\t\t\t}, def.props);\n\t\t\t\tout[name] = translate(def.id, intl.scope, intl.dictionary, def.fields, def.plural, def.fallback);\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n","import { cloneElement } from 'preact';\nimport { useContext } from 'preact/hooks';\nimport { IntlContext } from '../contexts/intl-context';\nimport translateMapping from '../lib/translate-mapping';\n\n/** `<Localizer />` is a Compositional Component.\n *\tIt \"renders\" out any `<Text />` values in its child's props.\n *\n *\t@name Localizer\n *\t@param {Object} props\n *\t@param {Object} props.children\tChild components with props to localize.\n *\t@param {Object} context\n *\t@param {Object} context.intl\t\t[internal] dictionary and scope info\n *\t@example\n *\t<Localizer>\n *\t\t<input placeholder={<Text id=\"username.placeholder\" />} />\n *\t</Localizer>\n *\t// produces:\n *\t<input placeholder=\"foo\" />\n *\n *\t@example\n *\t<Localizer>\n *\t\t<abbr title={<Text id=\"oss-title\">Open Source Software</Text>}>\n *\t\t\t<Text id=\"oss\">OSS</Text>\n *\t\t</abbr>\n *\t</Localizer>\n *\t// produces:\n *\t<abbr title=\"Open Source Software\">OSS</abbr>\n */\nexport function Localizer({ children }) {\n\tconst { intl } = useContext(IntlContext);\n\n\treturn children && children.length\n\t\t? children.map((child) => cloneElement(child, translateMapping(child.props, intl, true)))\n\t\t: children && cloneElement(children, translateMapping(children.props, intl, true));\n}\n","import { h } from 'preact';\nimport { Text } from './text';\nimport Markup from 'preact-markup';\nimport { Localizer } from './localizer';\nimport { HighlightI18N } from './highlight-i18n';\n\n/* eslint-disable react/no-danger */\n\n/** `<MarkupText>` is just like {@link Text} but it can also contain html markup in rendered strings.  It wraps its contents in a `<span>` tag.\n *\n *\t@param {Object} props\t\t\t\tprops\n *\t@param {String} props.id\t\t\tKey to look up in intl dictionary, within any parent scopes (`$scope1.$scope2.$id`)\n *\t@param {Object} [props.fields={}]\tValues to inject into template `{{fields}}`.  Values in the `fields` object will be coerced to strings, with the exception of `<Text/>` nodes which will be resolved to their translated value\n *\t@param {Number} [props.plural]\t\tInteger \"count\", used to select plural forms\n *\n *\t@example\n *\t// If there is no dictionary in context..\n *\t<MarkupText id=\"foo\"><b>The Foo</b></MarkupText>\n *\t// ..produces the vnode:\n *\t<span><b>The Foo</b></span>\n *\n *\t@example\n *\t// Given a dictionary and some fields..\n *\t<IntlProvider definition={{ foo:'Le Feux <b>{{bar}}</b>' }}>\n *\t\t<MarkupText id=\"foo\" fields={{ bar: 'BEAR' }}>The Foo</MarkupText>\n *\t</IntlProvider>\n *\t// ..produces the vnode:\n *\t<span>Le Feux <b>BEAR</b></span>\n *\n *\t@example\n *\t// Within a scope, both `id` and the definition are namespaced..\n *\t<IntlProvider scope=\"weather\" definition={{ foo:'Le <a href=\"http://foo.com\">Feux</a>' }}>\n *\t\t<MarkupText id=\"foo\">The Foo</MarkupText>\n *\t</IntlProvider>\n *\t// ..produces the vnode:\n *\t<span>Le <a href=\"http://foo.com\">Feux</a></span>\n *\n *\t@example\n *\t// renders nothing if there is no key match and no fallback\n *\t<div><MarkupText /></div>\n *\t// ..produces the vnode:\n *\t<div/>\n */\nexport function MarkupText({ id, fields, plural, children, ...props }) {\n\treturn (\n\t\t<Localizer>\n\t\t\t<Html html={<Text id={id} fields={fields} plural={plural} children={children} />} id={id} {...props} />\n\t\t</Localizer>\n\t);\n}\n\nfunction Html({ html, id, ...props }) {\n\treturn (\n\t\t<HighlightI18N\n\t\t\tid={id}\n\t\t\tvalue={!html ? html : typeof html === 'string' ? <Markup type=\"html\" trim={false} {...props} markup={html} /> : <span>{html}</span>}\n\t\t/>\n\t);\n}\n","import { h } from 'preact';\nimport { useContext } from 'preact/hooks';\nimport { IntlContext } from '../contexts/intl-context';\nimport translateMapping from '../lib/translate-mapping';\nimport { assign } from '../lib/util';\n\n/** `@withText()` is a Higher Order Component, often used as a decorator.\n *\n *\tIt wraps a child component and passes it translations\n *\tbased on a mapping to the dictionary & scope in context.\n *\n *\t@param {Object|Function|String} mapping\t\tMaps prop names to intl keys (or `<Text>` nodes).\n *\n *\t@example @withText({\n *\t\tplaceholder: 'user.placeholder'\n *\t})\n *\tclass Foo {\n *\t\t// now the `placeholder` prop is our localized String:\n *\t\trender({ placeholder }) {\n *\t\t\treturn <input placeholder={placeholder} />\n *\t\t}\n *\t}\n *\n *\t@example @withText({\n *\t\tplaceholder: <Text id=\"user.placeholder\">fallback text</Text>\n *\t})\n *\tclass Foo {\n *\t\trender({ placeholder }) {\n *\t\t\treturn <input placeholder={placeholder} />\n *\t\t}\n *\t}\n *\n *\t@example @withText('user.placeholder')\n *\tclass Foo {\n *\t\t// for Strings/Arrays, the last path segment becomes the prop name:\n *\t\trender({ placeholder }) {\n *\t\t\treturn <input placeholder={placeholder} />\n *\t\t}\n *\t}\n *\n *\t@example <caption>Works with functional components, too</caption>\n *\tconst Foo = withText('user.placeholder')( props =>\n *\t\t<input placeholder={props.placeholder} />\n *\t)\n *\n * \t@example <caption>getWrappedComponent() returns wrapped child Component</caption>\n *\tconst Foo = () => <div/>;\n *\tconst WrappedFoo = withText('user.placeholer')(Foo);\n *\tWrappedFoo.getWrappedComponent() === Foo; // true\n */\nexport function withText(mapping) {\n\treturn function withTextWrapper(Child) {\n\t\tfunction WithTextWrapper(props, context) {\n\t\t\tconst { intl } = useContext(IntlContext);\n\n\t\t\tlet map = typeof mapping==='function' ? mapping(props, { intl }) : mapping;\n\t\t\tlet translations = translateMapping(map, intl);\n\t\t\treturn h(Child, assign(assign({}, props), translations));\n\t\t}\n\n\t\tWithTextWrapper.getWrappedComponent = Child && Child.getWrappedComponent || (() => Child);\n\t\treturn WithTextWrapper;\n\t};\n}\n","import { useContext } from 'preact/hooks';\nimport { IntlContext } from '../contexts/intl-context';\nimport translateMapping from '../lib/translate-mapping';\n\n/** `useText` is the hook version of {@link withText}\n *\n *\t@param {Object|Function|String} mapping\t\tMaps prop names to intl keys (or `<Text>` nodes).\n *\n *\t@example function MyComponent() {\n *\t\tconst { placeholder } = useText({\n *\t\t\tplaceholder: 'user.placeholder'\n *\t\t});\n *\t\treturn <input placeholder={placeholder} />\n *\t}\n *\n *\t@example function MyComponent() {\n *\t\tconst { placeholder } = useText({\n *\t\t\tplaceholder: <Text id=\"user.placeholder\">fallback text</Text>\n *\t\t});\n *\t\treturn <input placeholder={placeholder} />\n *\t}\n *\n *\t@example function MyComponent() {\n *\t\t// for Strings/Arrays, the last path segment becomes the prop name:\n *\t\tconst { placeholder } = useText('user.placeholder');\n *\n *\t\treturn <input placeholder={placeholder} />\n *\t}\n */\nexport function useText(mapping) {\n\tconst { intl } = useContext(IntlContext);\n\n\treturn translateMapping(\n\t\ttypeof mapping==='function' ? mapping({ intl }) : mapping,\n\t\tintl\n\t);\n}\n","var map = {\n\t\"./ja.json\": [\n\t\t\"IJWC\",\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"T+V2\";\nmodule.exports = webpackAsyncContext;","import { Component, h, Fragment } from 'preact';\nimport { IntlProvider, Text, Localizer, translate } from 'preact-i18n';\nimport { config } from './config';\nimport { type AppState, Role, isLanguage, Languages } from './types';\n\nexport default class App extends Component<{}, AppState> {\n  state: Readonly<AppState> = {\n    isGapiLoaded: false,\n    tokenClient: null,\n    accessToken: null,\n    users: '',\n    sendNotificationEmail: true,\n    role: Role.reader,\n    selectedDocument: null,\n    selectedDocumentPermissions: null,\n    result: null,\n    batchLoading: false,\n    language: '',\n    i18n: {},\n  };\n\n  componentDidMount() {\n    for (const languageString of navigator.languages) {\n      const language = languageString.split('-')[0];\n      if (isLanguage(language)) {\n        this.switchLanguage(language);\n        break;\n      }\n    }\n\n    this.loadExternalScript('https://apis.google.com/js/api.js', () => {\n      gapi.load('client:picker', async () => {\n        await gapi.client.init({});\n        await gapi.client.load('drive', 'v3');\n        this.setState({ isGapiLoaded: true });\n      });\n    });\n\n    this.loadExternalScript('https://accounts.google.com/gsi/client', () => {\n      this.setState({\n        tokenClient: google.accounts.oauth2.initTokenClient({\n          client_id: config.clientId,\n          scope: 'https://www.googleapis.com/auth/drive.file',\n          prompt: '',\n          callback: (tokenResponse) => {\n            this.setState({ accessToken: tokenResponse.access_token }, () => this.choose());\n          },\n        }),\n      });\n    });\n  }\n\n  loadExternalScript(src: string, onload: () => void) {\n    const script = document.createElement('script');\n    script.src = src;\n    script.onload = onload;\n    document.body.appendChild(script);\n  }\n\n  authorizeAndChoose() {\n    if (!this.state.tokenClient) {\n      return;\n    }\n\n    this.state.tokenClient.requestAccessToken();\n  }\n\n  choose() {\n    if (!this.state.accessToken) {\n      return;\n    }\n\n    new google.picker.PickerBuilder()\n      .enableFeature(google.picker.Feature.SUPPORT_DRIVES)\n      .setAppId(config.appId)\n      .setOAuthToken(this.state.accessToken)\n      .addView(new google.picker.DocsView())\n      .addView(new google.picker.DocsView().setEnableDrives(true))\n      .setDeveloperKey(config.developerKey)\n      .setCallback(async (data) => {\n        if (data.action === google.picker.Action.PICKED) {\n          const selectedDocument = data.docs[0];\n          const list = await gapi.client.drive.permissions.list({\n            fileId: selectedDocument.id,\n            supportsAllDrives: true,\n            fields: '*',\n          });\n          this.setState({\n            selectedDocument,\n            selectedDocumentPermissions: list.result,\n            result: null,\n          });\n        }\n      })\n      .build()\n      .setVisible(true);\n  }\n\n  batchInvite() {\n    if (!this.state.selectedDocument || !this.validatedUsers.isValid) {\n      return;\n    }\n\n    const message = translate(\n      this.state.sendNotificationEmail ? 'batchInvite.confirm.withEmail' : 'batchInvite.confirm.withoutEmail',\n      '',\n      this.state.i18n,\n      {\n        count: this.validatedUsers.users.length,\n        role: this.state.role,\n      },\n      undefined,\n      `Are you sure you want to invite ${this.validatedUsers.users.length} users as ${this.state.role} ${\n        this.state.sendNotificationEmail ? 'with' : 'without'\n      } sending notification email?`,\n    );\n\n    if (!confirm(message)) {\n      return;\n    }\n\n    this.setState({ batchLoading: true });\n\n    const batch: gapi.client.Batch<gapi.client.drive.Permission> = gapi.client.newBatch();\n    for (const emailAddress of this.validatedUsers.users) {\n      batch.add(\n        gapi.client.drive.permissions.create({\n          fileId: this.state.selectedDocument.id,\n          sendNotificationEmail: this.state.sendNotificationEmail,\n          supportsAllDrives: true,\n          fields: '*',\n          resource: {\n            role: this.state.role,\n            type: 'user',\n            emailAddress,\n          },\n        }),\n        // @ts-ignore type definition is wrong\n        { id: emailAddress },\n      );\n    }\n\n    batch.then(({ result }) => {\n      this.setState({ result, batchLoading: false });\n    });\n  }\n\n  async switchLanguage(language: string) {\n    if (!isLanguage(language)) {\n      return;\n    }\n\n    if (language) {\n      const i18n = await import(`../i18n/${language}.json`);\n      // hack: preact-i18n is bullshit\n      i18n.hasOwnProperty = () => true;\n      this.setState({ language, i18n });\n    } else {\n      this.setState({ language, i18n: {} });\n    }\n  }\n\n  get validatedUsers() {\n    const users = this.state.users\n      .split('\\n')\n      .map((user) => user.trim())\n      .filter((user) => user);\n\n    if (users.length === 0) {\n      return {\n        isValid: false as const,\n        reason: translate('validation.empty', '', this.state.i18n, {}, undefined, 'Please specify at least one user.'),\n      };\n    }\n\n    const invalidUser = users.find((user) => !user.includes('@'));\n\n    if (invalidUser) {\n      return {\n        isValid: false as const,\n        reason: translate(\n          'validation.invalid',\n          '',\n          this.state.i18n,\n          { invalidUser },\n          undefined,\n          invalidUser + ' is an invalid email address',\n        ),\n      };\n    } else {\n      return { isValid: true as const, users };\n    }\n  }\n\n  renderLoading() {\n    return (\n      <div>\n        <img src=\"https://cdnjs.cloudflare.com/ajax/libs/galleriffic/2.0.1/css/loader.gif\" />\n        <Text id=\"loading\">Loading Google API...</Text>\n      </div>\n    );\n  }\n\n  renderAuthorize() {\n    return (\n      <button onClick={() => this.authorizeAndChoose()}>\n        <Text id=\"authorizeAndChooseADocument\">Authorize and choose a document</Text>\n      </button>\n    );\n  }\n\n  renderChoose() {\n    return (\n      <button onClick={() => this.choose()}>\n        <Text id=\"chooseADocument\">Choose a document</Text>\n      </button>\n    );\n  }\n\n  renderBatchInvite() {\n    if (!this.state.selectedDocument || !this.state.selectedDocumentPermissions) {\n      return;\n    }\n\n    return (\n      <>\n        {this.renderChoose()}\n\n        <div class=\"selected-document\">\n          <h2>\n            <img src={this.state.selectedDocument.iconUrl} />\n            <a href={this.state.selectedDocument.url} target=\"_blank\">\n              {this.state.selectedDocument.name}\n            </a>\n          </h2>\n          <Text id=\"batchInvite.lastEdited\">Last edited</Text>:{' '}\n          {new Date(this.state.selectedDocument.lastEditedUtc).toLocaleString(this.state.language || undefined, {\n            dateStyle: 'full',\n            timeStyle: 'full',\n          })}\n        </div>\n\n        <div class=\"current-permissions\">\n          <h3>\n            <Text id=\"batchInvite.currentPermissions\">Current permissions</Text>\n          </h3>\n          <ul>\n            {this.state.selectedDocumentPermissions.permissions?.map((permission) => (\n              <li>\n                {permission.role}:{permission.deleted ? '[DELETED] ' : ''}\n                <img src={permission.photoLink} />\n                {permission.displayName || '(NO NAME)'}&nbsp; &lt;{permission.emailAddress || '(NO ADDRESS)'}&gt;\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <Localizer>\n          <textarea\n            value={this.state.users}\n            onInput={(event) => this.setState({ users: (event.target as HTMLTextAreaElement).value })}\n            /** @ts-ignore I hate preact-i18n */\n            placeholder={<Text id=\"batchInvite.enterOneEmailPerLine\">Enter one email address per line</Text>}\n          />\n        </Localizer>\n        <div class=\"validation-result\">{!this.validatedUsers.isValid ? this.validatedUsers.reason : ' '}</div>\n\n        <div class=\"wrapper-roles\">\n          {Object.values(Role).map((role) => (\n            <label>\n              <input type=\"radio\" checked={this.state.role === role} onClick={() => this.setState({ role })} />\n              <span>{role}</span>\n            </label>\n          ))}\n        </div>\n\n        <div class=\"wrapper-send-notification-email\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={this.state.sendNotificationEmail}\n              onClick={() => this.setState({ sendNotificationEmail: !this.state.sendNotificationEmail })}\n            />\n            <Text id=\"batchInvite.notifyPeople\">Notify people (Send Notification Email)</Text>\n          </label>\n        </div>\n\n        <button onClick={() => this.batchInvite()} disabled={!this.validatedUsers.isValid || this.state.batchLoading}>\n          <Text id=\"batchInvite.batchInvite\">Batch invite</Text>\n        </button>\n        {this.state.batchLoading && (\n          <img src=\"https://cdnjs.cloudflare.com/ajax/libs/galleriffic/2.0.1/css/loader.gif\" class=\"loading\" />\n        )}\n      </>\n    );\n  }\n\n  renderResult() {\n    if (!this.state.result) {\n      return;\n    }\n\n    const notReflected = Object.values(this.state.result).flatMap(({ result }) => {\n      if (!('error' in result) && result.role !== this.state.role && result.role) {\n        return [result];\n      }\n\n      return [];\n    });\n\n    return (\n      <>\n        <ul>\n          {Object.entries(this.state.result).map(([id, result]) => (\n            <li class={'error' in result.result ? 'error' : ''}>\n              <details>\n                <summary>\n                  {id}: {result.status} {result.statusText}\n                  {'error' in result.result && ' [' + result.result.error.message + ']'}\n                </summary>\n                <pre>{JSON.stringify(result.result, null, 4)}</pre>\n              </details>\n            </li>\n          ))}\n        </ul>\n\n        {notReflected.length > 0 && (\n          <div class=\"not-reflected\">\n            {/** @ts-ignore I'm not sure this is the right way */}\n            <Text id=\"notReflected1\" fields={{ role: this.state.role, count: notReflected.length }}>\n              Although you invited people as {this.state.role}, {notReflected.length} people have different roles.{' '}\n            </Text>\n            <a\n              href=\"https://developers.google.com/drive/api/v3/manage-sharing#:~:text=Permissions%20can%20be%20granted,the%20file%20or%20folder.\"\n              target=\"_blank\"\n            >\n              <Text id=\"notReflected2\">This can be because they already had a more permissive role.</Text>\n            </a>\n            <ul>\n              {notReflected.map(({ displayName, emailAddress, role }) => (\n                <li>\n                  {role}: {displayName} &lt;{emailAddress}&gt;\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {this.renderChoose()}\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <IntlProvider definition={this.state.i18n}>\n        <main>\n          <select\n            value={this.state.language}\n            onChange={(event) => this.switchLanguage((event.target as HTMLSelectElement).value)}\n          >\n            {Languages.map(({ id, name }) => (\n              <option value={id}>{name}</option>\n            ))}\n          </select>\n\n          <h1>Google Docs Batch Invite</h1>\n          <p>\n            <Text id=\"appDescription\">\n              Share your Google Docs (and any files on Google Drive) with multiple users at once.\n            </Text>\n          </p>\n          <p>\n            © 2022 Yusuke Kido [<a href=\"https://github.com/kissge/google-docs-batch-invite\">Source on GitHub</a>]\n          </p>\n\n          {!this.state.tokenClient || !this.state.isGapiLoaded\n            ? this.renderLoading()\n            : !this.state.accessToken\n            ? this.renderAuthorize()\n            : !this.state.selectedDocument\n            ? this.renderChoose()\n            : !this.state.result\n            ? this.renderBatchInvite()\n            : this.renderResult()}\n        </main>\n      </IntlProvider>\n    );\n  }\n}\n","export enum Role {\n  reader = 'reader',\n  commenter = 'commenter',\n  writer = 'writer',\n  fileOrganizer = 'fileOrganizer',\n  organizer = 'organizer',\n  owner = 'owner',\n}\n\nexport interface AppState {\n  isGapiLoaded: boolean;\n  tokenClient: TokenClient | null;\n  accessToken: string | null;\n  users: string;\n  sendNotificationEmail: boolean;\n  role: Role;\n  selectedDocument: google.picker.DocumentObject | null;\n  selectedDocumentPermissions: gapi.client.drive.PermissionList | null;\n  result: gapi.client.ResponseMap<gapi.client.drive.Permission | GAPIError> | null;\n  batchLoading: boolean;\n  language: Language;\n  i18n: {}; // <- preact-i18n's type definition is awful\n}\n\nexport const Languages = [\n  { id: '' as const, name: 'English' },\n  { id: 'ja' as const, name: '日本語' },\n];\nexport type Language = typeof Languages[0]['id'];\nexport function isLanguage(x: string): x is Language {\n  return Languages.some(({ id }) => id === x);\n}\n","import './style/index.css';\nimport App from './components/app';\n\nexport default App;\n"],"sourceRoot":""}